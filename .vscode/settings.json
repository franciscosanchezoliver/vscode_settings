{
    // Size of the windows, fonts, everything
    "window.zoomLevel": 0,

    // To improve speed
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": false
    },

    // To improve speed
    "git.enabled": false,

    // Hide the debug controls, if we want to see them we have to go to
    // the debug view
    // "debug.toolBarLocation": "docked",

    // cursor appearance
    "editor.cursorBlinking": "phase",
    "editor.cursorStyle": "line",

    // tabs are small and we can see more of them
    "workbench.editor.tabSizing": "shrink", 

    // we don't want to show several folders in just
    // one line
    "explorer.compactFolders": false,
    // Activate easy motion to be able to search faster
    // to search use <leader><leader>/
    "vim.easymotion": true,
    // set the relative number of lines by default
    "editor.lineNumbers": "relative",
    // Use space instead of '\' for the leader key
    "vim.leader": "<Space>",
    "debug.console.wordWrap": false,
    "avoidWindowsConsoleRedirection": true,
    // Show variable values in the same line
    "debug.inlineValues": "on",
    // Draw lines at lines
    "editor.rulers": [
      80,
      120
    ],
    // color of the line
    "workbench.colorCustomizations": {
      "editorRuler.foreground": "#ff0000"
    },
    "debug.openDebug": "neverOpen",
    // Custom commands for when we are in normal mode
    "vim.normalModeKeyBindingsNonRecursive": [

      // Search with easy motion
      {

        "before": [
          "f"
        ],
        "after": [
          "<leader>",
          "<leader>",
          "/"
        ]
      },

      // Open Recent projects
      {
        "before": [
          "<leader>",
          "r"
        ],
        "commands": [
          "workbench.action.openRecent"
        ]
      },

      // Refresh tests
      {
        "before": [
          "<leader>",
          "r", 
          "t"
        ],
        "commands": [
          "testing.refreshTests" 
        ]
      },

      // Go back
      {
        "before": [
          "<leader>",
          "s"
        ],
        "commands": [
          "workbench.action.navigateBack"
        ]
      },

      {
        "before": [
          "<leader>",
          "o"
        ],
        "commands": [
          "workbench.action.debug.stepOut"
        ]
      },


      // Debug
      // Go to debugging line
      {
        "before": [
          "leader",
          "d"
        ],
        "commands": [
          "workbench.action.debug.callStackTop"
        ]
      },

      // Step over
      {
        "before": [
          "<leader>",
          "n"
        ],
        "commands": [
          "workbench.action.debug.stepOver"
        ]
      },

      // Step into
      {
        "before": [
          "<leader>",
          "i"
        ],
        "commands": [
          "workbench.action.debug.stepInto"
        ]
      },

      // add a breakpoint
      {
        "before": [
          "<leader>",
          "b"
        ],
        "commands": [
          "editor.debug.action.toggleBreakpoint"
        ]
      },
      
      // Continue to next breakpoint
      {
        "before": [
          "<leader>",
          "Ã±"
        ],
        "commands": [
          "workbench.action.debug.continue"
        ]
      },


      // Continue and exsit function
      {
        "before": [
          "<leader>",
          "p"
        ],
        "commands": [
          "workbench.action.debug.stepOut"
        ]
      },

      // Stop Debug
      {
        "before": [
          "<leader>",
          "4"
        ],
        "commands": [
          "workbench.action.debug.stop"
        ]
      },

      // go inside method
      {
        "before": [
          "<leader>",
          "a"
        ],
        "commands": [
          "editor.action.revealDefinition"
        ]
      },

      // resize width active tab
      {
        "before": [
          "<leader>",
          "u"
        ],
        "commands": [
          "workbench.action.toggleEditorWidths"
        ]
      },

      // Go to next tab
      {
        "before": [
          "<S-l>"
        ],
        "commands": [
          ":bnext"
        ]
      } ,

      // Go to previous tab
      {
        "before": [
          "<S-h>"
        ],
        "commands": [
          ":bprevious"
        ]
      } ,
      // go to next tab
      
      // move between panes
      {
        "before": [
          "leader",
          "h"
        ],
        "commands": [
          "workbench.action.focusLeftGroup"
        ]
      },
      {
        "before": [
          "leader",
          "j"
        ],
        "commands": [
          "workbench.action.focusBelowGroup"
        ]
      },
      {
        "before": [
          "leader",
          "k"
        ],
        "commands": [
          "workbench.action.focusAboveGroup"
        ]
      },

      {
        "before": [
          "leader",
          "l"
        ],
        "commands": [
          "workbench.action.focusRightGroup"
        ]
      },

      // split windows
      {
        "before": [
          "<leader>",
          "w"
        ],
        "commands": [
          "workbench.action.splitEditor"
        ]
      },

      // find file in explorer
      {
        "before": [
          "<leader>",
          "f"
        ],
        "commands": [
          "revealInExplorer"
        ]
      },
      // toggle bar
      {
        "before": [
          "<leader>",
          "e"
        ],
        "commands": [
          "workbench.action.toggleSidebarVisibility"
        ]
      },

      // Close all other tabs in editor (close non active)
      {
        "before": [
          "<leader>", 
          "w", 
          "e"
        ], 
        "commands": [
          "workbench.action.closeOtherEditors"
        ]
      },

      // Close all tabs in editor
      {
        "before": [
          "<leader>", 
          "w", 
          "w"
        ], 
        "commands": [
          "workbench.action.closeEditorsInGroup"
        ]
      },

      // Close tags on other editors

      {
        "before": [
          "<leader>", 
          "w", 
          "e",
          "r"
        ], 
        "commands": [
          "workbench.action.closeEditorsInOtherGroups"
        ]
      },


      // Indenting
      {
        "before": [
          "<"
        ],
        "commands": [
          "editor.action.outdentLines"
        ]
      },

      {
        "before": [
          ">"
        ],
        "commands": [
          "editor.action.indentLines"
        ]
      },

      // Comment line
      {
        "before": [
          "leader",
          "c"
        ],
        "commands": [
          "editor.action.commentLine"
        ]
      },
      // Close current editor
      {
        "before": [
          "leader",
          "q"
        ],
        "commands": [
          "workbench.action.closeActiveEditor"
        ]
      },
      // Move editor to group
      {
        "before": [
          "leader",
          "m",
          "k"
        ],
        "commands": [
          "workbench.action.moveEditorToAboveGroup"
        ]
      },
      {
        "before": [
          "leader",
          "m",
          "j"
        ],
        "commands": [
          "workbench.action.moveEditorToBelowGroup"
        ]
      },
      {
        "before": [
          "leader",
          "m",
          "h"
        ],
        "commands": [
          "workbench.action.moveEditorToPreviousGroup"
        ]
      },
      {
        "before": [
          "leader",
          "m",
          "l"
        ],
        "commands": [
          "workbench.action.moveEditorToNextGroup"
        ]
      },


      // Decrease weight of Screen
      {
        "before": [
          "<C-h>",
        ],
        "after": [
          "<C-w>",
          "<"
        ]
      },

      // Increase weight of Screen
      {
        "before": [
          "<C-l>",
        ],
        "after": [
          "<C-w>",
          ">"
        ]
      },


      // Increase Height of Screen
      {
        "before": [
          "<C-j>",
        ],
        "after": [
          "<C-w>",
          "+"
        ]
      },

      // Decrease Height of Screen
      {
        "before": [
          "<C-k>",
        ],
        "after": [
          "<C-w>",
          "-"
        ]
      }

    ],
    "vim.insertModeKeyBindings": [
      // going from insert mode to normal mode
      {
        "before": [
          "j",
          "k"
        ],
        "after": [
          "<Esc>"
        ]
      }
    ],
    // key combinations that we don't want vim to
    // handle it
    "vim.handleKeys": {
      // Select all text
      "<C-a>": false,
      // Find 
      "<C-f>": false,
    },
    "vim.visualModeKeyBindings": [
      // Indenting
      {
        "before": [
          "<"
        ],
        "commands": [
          "editor.action.outdentLines"
        ]
      },
      {
        "before": [
          ">"
        ],
        "commands": [
          "editor.action.indentLines"
        ]
      },
      //Comment lines
      {
        "before": [
          "leader",
          "c"
        ],
        "commands": [
          "editor.action.commentLine"
        ]
      },



    ],
    "background.fullscreen": {
      "images": [
        // here the path to a file
        // "file:///C:\\Users\\myuser......"
      ],
      "images": [
        "https://images3.alphacoders.com/135/thumb-1920-1358139.png", // Darth Vader
        "https://images5.alphacoders.com/593/thumb-1920-593850.jpg", // mandalorian
        "https://images2.alphacoders.com/613/thumb-1920-613081.jpg", // Ships
        "https://picfiles.alphacoders.com/646/646408.jpeg", // Synthwave Mountain
        "https://images3.alphacoders.com/133/thumb-1920-1331117.png", // Blue Nebula
        "https://images2.alphacoders.com/130/thumb-1920-1308322.jpeg", // Landscape: Blue
        "https://images2.alphacoders.com/916/thumb-1920-916108.jpg", // Red planet
        "https://images8.alphacoders.com/128/thumb-1920-1281520.jpg", // Night and Raining futuristic city (Pixel Art)
        "https://images3.alphacoders.com/144/thumb-1920-144565.jpg", // Itachi
        "https://images.alphacoders.com/133/thumb-1920-1337463.png", // Kakashi
        "https://images2.alphacoders.com/125/thumb-1920-1254846.jpg", // Kurama Naruto
        "https://images2.alphacoders.com/133/thumb-1920-1337462.png", // Naruto Purple
        "https://images7.alphacoders.com/134/thumb-1920-1347135.png", // ITachi Pink
        "https://images4.alphacoders.com/135/thumb-1920-1357584.png", // Madara Blue and Red 
        "https://images6.alphacoders.com/134/thumb-1920-1347137.png", // Madara Eyes Red
      ], // urls of your images
      "opacity": 0.85, // 0.85 ~ 0.95 recommended
      // "size": "self-adaption", // also css, cover to self-adaption (recommended)ï¼or containã200px 200px
      "size": "cover", // also css, cover to self-adaption (recommended)ï¼or containã200px 200px
      "position": "center", // alias to background-position, default center
      "interval": 500, // seconds of interval for carousel, default 0 to disabled.
      "random": true
    },
    // "workbench.statusBar.visible": false,
    "workbench.sideBar.location": "right",
    "window.menuBarVisibility": "compact",

    "editor.minimap.enabled": false,
    "workbench.startupEditor": "none",
    "editor.stickyScroll.enabled": true,
    "python.analysis.extraPaths": [],
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-python.autopep8",

    "python.interpreter.infoVisibility": "always",
    "explorer.confirmDelete": false,
    // "github.copilot.enable": {
    //   "*": true,
    //   "plaintext": false,
    //   "markdown": true,
    //   "scminput": false
    // },
    "background.settingScope": "Workspace",
    "python.languageServer": "Pylance",
    "python.jediEnabled": false,
    "editor.formatOnPaste": true,

    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    "workbench.iconTheme": "material-icon-theme",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "diffEditor.renderSideBySide": true,
    "workbench.editor.enablePreview": false,
    "javascript.preferences.organizeImports": {},
    "testing.followRunningTest": true,

    // "workbench.colorTheme": "Abyss",
    "workbench.colorTheme": "Monokai",
    // "workbench.colorTheme":"Monokai Dimmed",
    // "workbench.colorTheme":"Default Dark Modern",
    "githubPullRequests.pullBranch": "never",
    // "github.copilot.nextEditSuggestions.enabled": true,
  }
